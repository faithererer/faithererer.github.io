<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>leetcode_2_两数相加.md</title>
      <link href="/2023/03/18/leetcode_2_%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/"/>
      <url>/2023/03/18/leetcode_2_%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给你两个  <strong>非空</strong>  的链表，表示两个非负的整数。它们每位数字都是按照  <strong>逆序</strong>  的方式存储的，并且每个节点只能存储  <strong>一位</strong>  数字。</p><p>请你将两个数相加，并以相同形式返回一个表示和的链表。</p><p>你可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p><p> <strong>示例 1：</strong> </p><p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2021/01/02/addtwonumber1.jpg" alt=""><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [2,4,3], l2 = [5,6,4]</span><br><span class="line">输出：[7,0,8]</span><br><span class="line">解释：342 + 465 = 807.</span><br></pre></td></tr></table></figure></p><p> <strong>示例 2：</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [0], l2 = [0]</span><br><span class="line">输出：[0]</span><br></pre></td></tr></table></figure><p> <strong>示例 3：</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]</span><br><span class="line">输出：[8,9,9,9,0,0,0,1]</span><br></pre></td></tr></table></figure><p> <strong>提示：</strong> </p><ul><li>每个链表中的节点数在范围 $[1, 100]$ 内</li><li>$0 &lt;= Node.val &lt;= 9$</li><li>题目数据保证列表表示的数字不含前导零</li></ul><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><p>题目给出两个链表，由头节点顺序遍历得到的序列是一个数的逆序列，求两个链表所表示的两数之和。</p><p>我们可以新建一个结果链表<code>res</code>,并设置一个工作指针<code>last</code>。初始化，指向<code>res</code>头节点。设置<code>carry</code>记录当前进位数,初始化为0.</p><p>循环。遍历<code>l1</code> ,<code>l2</code>两个链表</p><p>分为以下种种情况</p><ul><li><p><code>l1!=null&amp;&amp;l2!=null</code></p><p>  此时<code>l1.val</code>和<code>l2.val</code>和<code>carry</code>相加，<code>(l1.val+l2.val+carry)%10</code>是当前位的数,<code>(l1.val+l2.val+carry)/10</code>是当前进位的数。两者顺序不能变。</p><p>  <code>l1</code>,<code>l2</code>,<code>last</code>,后移</p></li><li><p><code>l1!=null&amp;&amp;l2==null</code></p><p>  <code>(l1.val+carry)%10</code>是当前位的数,<code>(l1.val+carry)/10</code>是当前进位的数</p><p>  <code>l1</code>,<code>last</code>,后移</p></li><li><p><code>l1==null&amp;&amp;l2!=null</code></p><p>  <code>(l2.val+carry)%10</code>是当前位的数,<code>(l2.val+carry)/10是当前进位的数</code></p><p>  <code>l2</code>,<code>last</code>,后移</p></li><li><p><code>l1==null&amp;&amp;l2==null</code></p><p>  这步是收尾工作，判断当前位carry是否为0，是则last.next==null,否则last.next.val=carry</p></li></ul><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @lc app=leetcode.cn id=2 lang=java</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * [2] 两数相加</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// @lc code=start</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> &#123;</span><br><span class="line">        ListNode res=<span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> carry=<span class="number">0</span>;</span><br><span class="line">        ListNode last=res;</span><br><span class="line">        <span class="keyword">while</span>(l1!=<span class="literal">null</span>||l2!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(l1!=<span class="literal">null</span>&amp;&amp;l2!=<span class="literal">null</span>)&#123;</span><br><span class="line">                last.next=<span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">                last.next.val=(l1.val+l2.val+carry)%<span class="number">10</span>;</span><br><span class="line">                carry=(l1.val+l2.val+carry)/<span class="number">10</span>;</span><br><span class="line">                l1=l1.next;</span><br><span class="line">                l2=l2.next;</span><br><span class="line">                last=last.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(l2==<span class="literal">null</span>)&#123;</span><br><span class="line">                last.next=<span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">                last.next.val=(l1.val+carry)%<span class="number">10</span>;</span><br><span class="line">                carry=(l1.val+carry)/<span class="number">10</span>;</span><br><span class="line">                l1=l1.next;</span><br><span class="line">                last=last.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(l1==<span class="literal">null</span>)&#123;</span><br><span class="line">                last.next=<span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">                last.next.val=(l2.val+carry)%<span class="number">10</span>;</span><br><span class="line">                carry=(l2.val+carry)/<span class="number">10</span>;</span><br><span class="line">                l2=l2.next;</span><br><span class="line">                last=last.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(l1==<span class="literal">null</span>&amp;&amp;l2==<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(carry==<span class="number">0</span>)&#123;</span><br><span class="line">                    last.next=<span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(carry!=<span class="number">0</span>)&#123;</span><br><span class="line">                    last.next=<span class="keyword">new</span> <span class="title class_">ListNode</span>(carry);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res.next;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// @lc code=end</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode_1_两数之和.md</title>
      <link href="/2023/03/18/leetcode_1_%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
      <url>/2023/03/18/leetcode_1_%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定一个整数数组 $nums$ 和一个整数目标值 $target$，请你在该数组中找出  <strong>和为目标值</strong>  <em>$target$</em>  的那  <strong>两个</strong>  整数，并返回它们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p><p>你可以按任意顺序返回答案。</p><p> <strong>示例 1：</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [2,7,11,15], target = 9</span><br><span class="line">输出：[0,1]</span><br><span class="line">解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。</span><br></pre></td></tr></table></figure><p> <strong>示例 2：</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,2,4], target = 6</span><br><span class="line">输出：[1,2]</span><br></pre></td></tr></table></figure><p> <strong>示例 3：</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,3], target = 6</span><br><span class="line">输出：[0,1]</span><br></pre></td></tr></table></figure><p> <strong>提示：</strong> </p><ul><li>$2 &lt;= nums.length &lt;= 10^{4}$</li><li>$-10^{9} &lt;= nums[i] &lt;= 10^{9}$</li><li>$-10^{9} &lt;= target &lt;= 10^{9}$</li><li><p><strong>只会存在一个有效答案</strong> </p><p><strong>进阶：</strong> 你可以想出一个时间复杂度小于 $O(n^{2})$ 的算法吗？</p></li></ul><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><p> 定义两个指针<code>i</code>,<code>j</code>,<br> 遍历数组求和，当其<code>nums[i]+num[j]=target</code>时，记录两个下标的值<code>[i,j]</code>，最后返回这个数组。</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;nums.length;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[i]+nums[j]==target)&#123;</span><br><span class="line">                    a[<span class="number">0</span>]=i;a[<span class="number">1</span>]=j;</span><br><span class="line">                    <span class="keyword">return</span> a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性规划</title>
      <link href="/2022/08/08/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/"/>
      <url>/2022/08/08/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h1 id="线性规划"><a href="#线性规划" class="headerlink" title="线性规划"></a>线性规划</h1><p>我想计算一个线性方程组方程组的解</p><script type="math/tex; mode=display">\begin{equation}% \begin{equation*} 加'*'去掉公式编号\left\{\begin{aligned}     %请使用'aligned'或'align*'10x-2y-2z &= 72 \\     %加'&'指定对齐位置-x+10y-2z &= 83 \\-x-y+5z &= 42 \\\end{aligned}\right.\end{equation}% \end{equation*}   加'*'去掉公式编号% 注意：在 markdown 环境下，某些特殊字符，如'\', '*'等，会首先被 markdown 语法转义，然后再被 Latex 转义。% 因此有时候 '\{'需要写作'\\{'，'*'需要写作'\*'，'\\'需要写作'\\\\'等，视不同的解释环境而定</script><p>用python算应该怎么办呢？</p><p>发现有一个叫<code>numpy</code>的库</p><p>它有啥我们先不管,我们先关注于问题本身</p><p>它是一个$AX=b$形式的向量,我可以把它们写成向量的形式啊</p><p>长这样：</p><script type="math/tex; mode=display">\left[\begin{matrix}10 & -2 & -2 \\-1 & 10 & -2 \\-1 & -1 & 5 \\\end{matrix}\right] \left[\begin{matrix}x\\ y\\ z\end{matrix}\right]=\left[\begin{matrix}72\\83\\42\\\end{matrix}\right]</script><p>我需要矩阵乘法和矩阵求逆的方法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">A = np.array([[<span class="number">10</span>, -<span class="number">2</span>, -<span class="number">2</span>],[-<span class="number">1</span>, <span class="number">10</span>, -<span class="number">2</span>],[<span class="number">1</span>, -<span class="number">1</span>, <span class="number">5</span>]])</span><br><span class="line">b = np.array([<span class="number">72</span>, <span class="number">83</span>, <span class="number">42</span>])</span><br><span class="line">X = np.linalg.inv(A).dot(b)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(X)</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>我还发现可以用一个方法来解方程<script type="math/tex">AX=b</script></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X = np.linalg.solve(A,b)</span><br></pre></td></tr></table></figure><p>它是求解满秩的方程组的函数<br>第一个是系数矩阵，第二个是常数矩阵</p><p>我又了解到一个叫<code>sympy</code>的库,它的计算精度似乎更高<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> symbols, Eq, solve</span><br><span class="line"></span><br><span class="line">x,y,z = symbols(<span class="string">&quot;x y z&quot;</span>)  <span class="comment"># 符号化变量</span></span><br><span class="line">equ =[Eq(<span class="number">10</span>*x-<span class="number">2</span>*y-<span class="number">2</span>*z, <span class="number">72</span>),  <span class="comment"># 等式函数</span></span><br><span class="line">    Eq(-x+<span class="number">10</span>*y-<span class="number">2</span>*z, <span class="number">83</span>),</span><br><span class="line">    Eq(-x-y+<span class="number">5</span>*z, <span class="number">72</span>)]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(solve(equ, [x,y,z]))  <span class="comment">#</span></span><br><span class="line">第一个参数为要解的方程，要求右端等于<span class="number">0</span>，第二个参数为要解的未知数</span><br></pre></td></tr></table></figure><br>可是遇到很多不同类型约束条件应该怎么办呢</p><h2 id="线性规划的标准形式"><a href="#线性规划的标准形式" class="headerlink" title="线性规划的标准形式"></a>线性规划的标准形式</h2><p>$min \quad c^Tx$</p><script type="math/tex; mode=display">\begin{equation}\left\{    \begin{aligned}     Ax &\leq b \\    Aeq·x&=Beq \\    Ib \leq &x \leq ub    \end{aligned} \right.\end{equation}</script><p>比如下面这个 </p><p>$max\quad z=2x_1+3x_2-5x_3$</p><script type="math/tex; mode=display">\begin{equation}\left\{    \begin{aligned}     x_1+x_2+x_3&=7 \\    2x_1-5x_2+x_3&\geq10 \\    x_1+3x_2+x_3&\leq12 \\    x_1,x_2,x_3&\geq 3    \end{aligned} \right.\end{equation}</script><p><strong>求一个变量的最大值我们只要求出这个变量的相反数的最小值就好了</strong></p><p>根据规范式转换为</p><p>$min\quad -z=-2x_1-3x_2+5x_3$</p><script type="math/tex; mode=display">\begin{equation}\left\{    \begin{aligned}     x_1+x_2+x_3&=7 \\    -2x_1+5x_2-x_3&\leq-10 \\    x_1+3x_2+x_3&\leq12 \\    -x_1,-x_2,-x_3&\leq-3    \end{aligned} \right.\end{equation}</script><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pickletools <span class="keyword">import</span> optimize</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> linprog</span><br><span class="line"></span><br><span class="line">c = np.array([-<span class="number">2</span>,-<span class="number">3</span>,<span class="number">5</span>])</span><br><span class="line">Aeq = np.array([[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>]])</span><br><span class="line">beq = np.array([<span class="number">7</span>])</span><br><span class="line">A = np.array([[-<span class="number">2</span>,<span class="number">5</span>,-<span class="number">1</span>],[<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>]])</span><br><span class="line">b = np.array([-<span class="number">10</span>,<span class="number">12</span>])</span><br><span class="line">x1,x2,x3 = (<span class="number">0</span>,<span class="literal">None</span>),(<span class="number">0</span>,<span class="literal">None</span>),(<span class="number">0</span>,<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">res = linprog(c,A,b,Aeq,beq,bounds=[x1,x2,x3])</span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><p>关于<code>scipy.optimize.linprog</code><br><a href="https://blog.csdn.net/weixin_45288557/article/details/109139303">详细信息</a></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo x Github的常用指令</title>
      <link href="/2022/07/20/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
      <url>/2022/07/20/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-x-Github常用指令"><a href="#Hexo-x-Github常用指令" class="headerlink" title="Hexo x Github常用指令"></a>Hexo x Github常用指令</h1><h2 id="hexo-s"><a href="#hexo-s" class="headerlink" title="hexo s"></a>hexo s</h2><p>在blog目录下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>预览博客，返回一网页地址</p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p><a href="https://hexo.io/themes/">主题</a></p><p>如你所见，其实每个主题都会包含这个三个东西</p><ul><li>预览效果</li><li>项目地址</li><li>配置文档</li></ul><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li><p>打开主题项目地址，然后点击<code>CODE</code>，然后点击<code>Download ZIP</code></p><p>  这样可以下载主题文件压缩包</p></li><li><p>解压压缩包，把文件夹放在<code>blog</code>目录下的<code>themes</code>目录，并把文件夹命名为主题的名字</p></li><li><p>在站点<code>_config.yml</code>找到<code>themes</code>这一行，然后将主题名字修改为<code>你的主题的名字</code></p></li><li><p>注意：有些主题你更换之后是暂时无法预览的，因为有的主题还需要安装它需要的依赖，这一般都会在主题的文档里面提到，只有安装它的依赖之后才可以正常预览</p></li></ul><p>​    </p><h2 id="上传到github命令"><a href="#上传到github命令" class="headerlink" title="上传到github命令"></a>上传到github命令</h2><p><code>hexo g -d</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 语法</title>
      <link href="/2022/07/20/Markdown%20%E7%9A%84%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/07/20/Markdown%20%E7%9A%84%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown-基本语法一"><a href="#Markdown-基本语法一" class="headerlink" title="Markdown 基本语法一"></a>Markdown 基本语法一</h1><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">...</span><br><span class="line">###.. n级标题</span><br></pre></td></tr></table></figure><p>应该是<code># 标题</code>而不是<code>#标题</code>,在非标准文本编辑器中会报错.</p><h2 id="2-强调"><a href="#2-强调" class="headerlink" title="2.强调"></a>2.强调</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**Hello world**</span><br><span class="line">__ABCD__</span><br></pre></td></tr></table></figure><p><strong>Hello world</strong></p><p><strong>ABCD</strong></p><p>快捷方式: 选中目标 <code>ctrl+B</code></p><h2 id="3-斜体"><a href="#3-斜体" class="headerlink" title="3.斜体"></a>3.斜体</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*斜体*</span><br></pre></td></tr></table></figure><p><em>斜体</em></p><p><strong>若斜体且斜体可</strong>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">***鞋儿粗***</span><br><span class="line">___写而卒___</span><br></pre></td></tr></table></figure><p><strong><em>鞋儿粗</em></strong><br><strong><em>写而卒</em></strong></p><h2 id="4-删除"><a href="#4-删除" class="headerlink" title="4.删除"></a>4.删除</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~正确的话会被划掉~~</span><br></pre></td></tr></table></figure><p><del>正确的话会被划掉</del></p><h2 id="5-代码"><a href="#5-代码" class="headerlink" title="5.代码"></a>5.代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```加enter是代码块,`文字`仅有文字代码</span><br></pre></td></tr></table></figure><h2 id="6-引用"><a href="#6-引用" class="headerlink" title="6.引用"></a>6.引用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 他说</span><br><span class="line">&gt;&gt; 她说 </span><br></pre></td></tr></table></figure><blockquote><p>他说</p><blockquote><p>她说</p></blockquote></blockquote><p>引用是可以<strong>嵌套</strong>的</p><h2 id="7-列表"><a href="#7-列表" class="headerlink" title="7.列表"></a>7.列表</h2><h3 id="7-1无序"><a href="#7-1无序" class="headerlink" title="7.1无序"></a>7.1无序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+ a</span><br><span class="line">- b</span><br><span class="line">* c</span><br></pre></td></tr></table></figure><ul><li>a</li></ul><ul><li>b</li><li>c</li></ul><p><strong>回车</strong>可以延续</p><p><strong>tab</strong>构建上一级的<strong>子级</strong>列表</p><h3 id="7-2有序"><a href="#7-2有序" class="headerlink" title="7.2有序"></a>7.2有序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2. </span><br></pre></td></tr></table></figure><ol><li></li><li><ol><li>a</li><li>b</li></ol></li></ol><p>回车**可以延续</p><p><strong>tab</strong>构建上一级的<strong>子级</strong>列表</p><h2 id="8-角标"><a href="#8-角标" class="headerlink" title="8.角标"></a>8.角标</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ F = 10^3 N$</span><br></pre></td></tr></table></figure><p>$F = 10^3 N$</p><h2 id="9-高亮"><a href="#9-高亮" class="headerlink" title="9.高亮"></a>9.高亮</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">==啊==</span><br></pre></td></tr></table></figure><p>==啊==</p><h2 id="10-注释"><a href="#10-注释" class="headerlink" title="10.注释"></a>10.注释</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注释[^num]</span><br></pre></td></tr></table></figure><p>注释<sup><a href="#fn_1" id="reffn_1">1</a></sup></p><p><strong>脚注</strong>：(一般放在最后)</p><h2 id="11-链接"><a href="#11-链接" class="headerlink" title="11. 链接"></a>11. 链接</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[链接](https://www.baidu.com)</span><br><span class="line">[10:](# 10注释)</span><br></pre></td></tr></table></figure><p><a href="https://www.baidu.com">链接</a></p><p><a href="# 10注释">10:</a></p><h2 id="12-todo列表"><a href="#12-todo列表" class="headerlink" title="12. todo列表"></a>12. todo列表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- [ ] 一件事</span><br><span class="line">- [ ] 两件事</span><br><span class="line">- [x] 三件事</span><br></pre></td></tr></table></figure><ul><li><p>[x] 一件事</p></li><li><p>[ ] 两件事</p></li><li><p>[x] 三件事</p></li></ul><h2 id="13-表格"><a href="#13-表格" class="headerlink" title="13. 表格"></a>13. 表格</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|奇数|偶数|</span><br><span class="line">| :-- | :--: |</span><br><span class="line">|1|2</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">奇数</th><th style="text-align:center">偶数</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:center">2</td></tr></tbody></table></div><h2 id="14-图片"><a href="#14-图片" class="headerlink" title="14.  图片"></a>14.  图片</h2><p><strong>直接复制粘贴或拖动</strong></p><p><img src="https://img2.baidu.com/it/u=2839134121,3147950360&amp;fm=253&amp;fmt=auto?w=500&amp;h=195" alt="img"></p><p>配置typora+picgo+阿里云oss后，通过图床：</p><p><img src="https://blog-faithererer.oss-cn-qingdao.aliyuncs.com/blog/typoraImg202207221758534.jpg" alt="c5ad1e1202850c193aed802258e80113df477cf7_raw"></p><h2 id="15-分割线"><a href="#15-分割线" class="headerlink" title="15.分割线"></a>15.分割线</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***或---以上</span><br></pre></td></tr></table></figure><hr><h2 id="16-emoji表情"><a href="#16-emoji表情" class="headerlink" title="16.emoji表情"></a>16.emoji表情</h2><p>最好直接复制粘贴😊</p><p><a href="https://emojipedia.org">emoji表情网站</a></p><hr><h1 id="Markdown的基本语法二"><a href="#Markdown的基本语法二" class="headerlink" title="Markdown的基本语法二"></a>Markdown的基本语法二</h1><h2 id="1-生成目录"><a href="#1-生成目录" class="headerlink" title="1.生成目录"></a>1.生成目录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[TOC](typora特有)</span><br></pre></td></tr></table></figure><h2 id="2-内嵌-LaTeX-公式"><a href="#2-内嵌-LaTeX-公式" class="headerlink" title="2.内嵌$\LaTeX$公式"></a>2.内嵌$\LaTeX$公式</h2><p><a href="https://blog.csdn.net/weixin_42468475/article/details/106015495">latex大全](latex大全</a>)</p><h2 id="3-Typora-的常用快捷键"><a href="#3-Typora-的常用快捷键" class="headerlink" title="3. Typora 的常用快捷键"></a>3. Typora 的常用快捷键</h2><div class="table-container"><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:center">效果</th><th style="text-align:center">按键</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>Ctrl</code> + <code>D</code></td><td style="text-align:center">选中当前词</td><td style="text-align:center"><code>Ctrl</code> + <code>L</code></td><td style="text-align:center">选中当前句/行</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>E</code></td><td style="text-align:center">选中当前区块</td><td style="text-align:center"><code>Ctrl</code> + <code>F</code></td><td style="text-align:center">搜索当前选中</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>B</code></td><td style="text-align:center">加粗当前选中</td><td style="text-align:center"><code>Ctrl</code> + <code>H</code></td><td style="text-align:center">替换当前选中</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>I</code></td><td style="text-align:center">倾斜当前选中</td><td style="text-align:center"><code>Ctrl</code> + <code>U</code></td><td style="text-align:center">下划当前选中</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>K</code></td><td style="text-align:center">将当前选中生成链接</td><td style="text-align:center"><code>Ctrl</code> + <code>J</code></td><td style="text-align:center">滚动屏幕将选中滚至顶部</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>W</code></td><td style="text-align:center">关闭当前窗口</td><td style="text-align:center"><code>Ctrl</code> + <code>N</code></td><td style="text-align:center">打开新窗口</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>O</code></td><td style="text-align:center">打开文件</td><td style="text-align:center"><code>Ctrl</code> + <code>P</code></td><td style="text-align:center">搜索文件并打开</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>回车</code></td><td style="text-align:center">表格下方插入行</td><td style="text-align:center"><code>Ctrl</code> + <code>,</code></td><td style="text-align:center">打开偏好设置</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>.</code></td><td style="text-align:center">切换全角/半角标点</td><td style="text-align:center"><code>Ctrl</code> + <code>/</code></td><td style="text-align:center">切换正常/源代码视图</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>Shift</code> + <code>-</code></td><td style="text-align:center">缩小视图缩放</td><td style="text-align:center"><code>Ctrl</code> + <code>Shift</code> + <code>+</code></td><td style="text-align:center">放大视图缩放</td></tr></tbody></table></div><p>还有一些不常用的/三键的快捷键不在此列出.</p><h2 id="4-Typora-的主题样式与检查元素"><a href="#4-Typora-的主题样式与检查元素" class="headerlink" title="4. *Typora 的主题样式与检查元素"></a>4. *Typora 的主题样式与检查元素</h2><p>Markdown 在编译后约等于 HTML. 而 Typora 的正常视图就是编译后的 Markdown, 故Typora的主题样式本质就是 CSS 文件.</p><p>可以下载各种好看的主题给 Typora换上, 同时也可以自己调整对应的 CSS 文件, 或者自己手搓. </p><p>在 Typora 设置中开启 <code>调试模式</code> 后即可在正常视图右击打开 <code>检查元素</code>, 在其中就可以完全将 Markdown 文件当成 HTML 来编辑.</p><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p><a href="[Markdown基本语法 | Markdown 中文网 (p2hp.com">官网</a>](<a href="http://markdown.p2hp.com/basic-syntax/#code">http://markdown.p2hp.com/basic-syntax/#code</a>))</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>my-first-blog</title>
      <link href="/2022/07/20/my-first-blog/"/>
      <url>/2022/07/20/my-first-blog/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/07/20/hello-world/"/>
      <url>/2022/07/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
