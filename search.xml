<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MSP430单片机课设</title>
      <link href="/2023/06/18/%E5%8D%95%E7%89%87%E6%9C%BA/DBSend/"/>
      <url>/2023/06/18/%E5%8D%95%E7%89%87%E6%9C%BA/DBSend/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> MSP430 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OS_课设</title>
      <link href="/2023/06/18/OS/OS%E8%AF%BE%E8%AE%BE/"/>
      <url>/2023/06/18/OS/OS%E8%AF%BE%E8%AE%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="配置VScode"><a href="#配置VScode" class="headerlink" title="配置VScode"></a>配置VScode</h1><ul><li><p>安装C/C++扩展</p></li><li><p>安装完成之后，直接在VsCode中按 <code>ctrl+shift+p</code>快捷键,选择<code>C/C++编辑UI</code>。</p></li></ul><p><img src="https://blog-faithererer.oss-cn-qingdao.aliyuncs.com/blog/typoraImg202306182006628.png" alt="image-20230618182000074"></p><p><img src="https://blog-faithererer.oss-cn-qingdao.aliyuncs.com/blog/typoraImg202306182035387.png" alt="image-20230618171213466"></p><p><img src="https://blog-faithererer.oss-cn-qingdao.aliyuncs.com/blog/typoraImg202306182006081.png" alt="image-20230618171938200"></p><ul><li><p>在目录下新建<code>output</code>文件夹，在task.json中划线部分修改为<code>output</code>，这样生成的<code>exe</code>就会保存至<code>/output</code>文件夹下</p><p>  <img src="https://blog-faithererer.oss-cn-qingdao.aliyuncs.com/blog/typoraImg202306182006200.png" alt="image-20230618182628771"></p></li></ul><p>我想让程序输出在外部终端，发现C/C++插件现在的版本无法做到这一点，需要回退，而我的vscode TMD无法安装这个插件的历史版本，于是经过搜索知道，在<a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools">网页</a>抓包把版本信息替换为想要的版本 </p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-vscode/vsextensions/cpptools/1.8.4/vspackage?targetPlatform=win32-x64</span><br></pre></td></tr></table></figure><p><img src="https://blog-faithererer.oss-cn-qingdao.aliyuncs.com/blog/typoraImg202306182006466.png" alt="image-20230618195057503"></p><p>在<code>lauch.json</code>中添加<code>&quot;externalConsole&quot;: true</code></p><p><img src="https://blog-faithererer.oss-cn-qingdao.aliyuncs.com/blog/typoraImg202306182006392.png" alt="image-20230618195230187"></p><p>输出如图：</p><p><img src="https://blog-faithererer.oss-cn-qingdao.aliyuncs.com/blog/typoraImg202306182006298.png" alt="image-20230618195535278"></p><p>是的，又出现了中文乱码！！！！而在vscode内部终端则正常，一眼丁真鉴定为，cmd的编码。经过查询，按以下方法可以成功更改编码。</p><p><img src="https://blog-faithererer.oss-cn-qingdao.aliyuncs.com/blog/typoraImg202306182007512.png" alt="image-20230618195918187"></p><p>在cmd输入<code>chcp</code>返回<code>Active code page: 65001</code>说明成功更改为<code>utf-8</code></p><p>再次运行：</p><p><img src="https://blog-faithererer.oss-cn-qingdao.aliyuncs.com/blog/typoraImg202306182007626.png" alt="image-20230618200530767"></p><p>成功！，虽然字体也变了的说，但是也可以接受吧。。。</p><p>不要忘记修改<code>output</code>文件夹配置：</p><p><img src="https://blog-faithererer.oss-cn-qingdao.aliyuncs.com/blog/typoraImg202306182035173.png" alt="image-20230618202224084"></p><p><img src="https://blog-faithererer.oss-cn-qingdao.aliyuncs.com/blog/typoraImg202306182035234.png" alt="image-20230618202301910"></p>]]></content>
      
      
      <categories>
          
          <category> OS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库复习</title>
      <link href="/2023/06/04/%E6%95%B0%E6%8D%AE%E5%BA%93/DBSend/"/>
      <url>/2023/06/04/%E6%95%B0%E6%8D%AE%E5%BA%93/DBSend/</url>
      
        <content type="html"><![CDATA[<h1 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h1><h2 id="1-1-GO"><a href="#1-1-GO" class="headerlink" title="1.1 GO"></a>1.1 GO</h2><p>数据：描述事物的<strong>符号</strong>记录。</p><p>数据库：数据库是长期储存在计算机内、有组织的、可共享的大量数据的<strong>集合</strong>。</p><p>数据库管理系统：数据库管理系统是位于<strong>用户与操作系统</strong>之间的一层数据管理<strong>软件</strong>，它是一个大型复杂的软件系统，它主要用于科学地组织和存储数据、高效地获取和维护数据。</p><ul><li>数据库管理系统的功能：<ul><li>数据定义功能</li><li>数据组织，存储和管理</li><li>数据操纵功能</li><li>数据库的事务管理和运行管理</li><li>数据库的建立和维护功能</li></ul></li></ul><p>数据库系统=数据库+数据库管理系统+应用程序+数据库管理员（DBA）</p><p><strong>数据库系统的特点：</strong></p><ul><li><p><strong>数据结构化</strong></p><blockquote><p>数据的整体结构化是数据库的主要特征之一，它不再仅仅针对某一个应用，而是面向全组织，不仅数据内部结构化，整体也是结构化的，数据之间具有联系，数据记录可以变长，数据的最小存取单位是数据项。</p></blockquote></li><li><p><strong>数据的共享性高，冗余度低且易扩充</strong></p><ul><li>数据共享好处<ul><li>减少数据冗余，节约存储空间。</li><li>避免数据之间的不相容性与不一致性。</li><li>使系统易于扩充。</li></ul></li></ul></li><li><p><strong>数据独立性高</strong></p><blockquote><p>数据独立性由数据库管理系统的二级映像功能来保证，它主要分为：物理独立性和逻辑独立性。<br>物理独立性：指<strong>用户的应用程序</strong>与数据库中数据的物理存储是相互独立的，当数据的物理存储改变了，应用程序不用改变。<br>逻辑独立性：指<strong>用户的应用程序</strong>与数据库中数据的逻辑结构是相互独立的，当数据的逻辑结构改变了，应用程序不用改变。</p></blockquote></li><li><p><strong>数据由数据库管理系统统一管理和控制</strong></p><blockquote><p>数据库管理系统提供的数据控制功能。<br>（1）、数据的安全性（Security）保护：保护数据以防止不合法的使用造成的数据的泄密和破坏。<br>（2）、数据的完整性（Integrity）检查：保证数据的正确性、有效性和相容性。<br>（3）、并发（Concurrency）控制：对多用户的并发操作加以控制和协调，防止相互干扰而得到错误的结果。<br>（4）、数据库恢复（Recovery）技术：将数据库从错误状态恢复到某一已知的正确状态。</p></blockquote></li></ul><h2 id="1-2-数据模型"><a href="#1-2-数据模型" class="headerlink" title="1.2 数据模型"></a>1.2 数据模型</h2><p><strong>数据模型</strong>是对现实世界数据特征的抽象</p><p>数据模型是数据库系统的核心和基础。</p><p>数据模型的要求：</p><ul><li>能比较真实地模拟现实世界。</li><li>容易为人所理解。</li><li>便于在计算机上实现。</li></ul><p>两类数据模型：</p><ul><li><p>概念模型</p><blockquote><p>概念模型也称信息模型，它是<strong>按用户的观点</strong>来对数据和信息建模，用于数据库设计.</p></blockquote><p>  概念模型的用途:</p><ul><li>概念模型用于信息世界的建模。</li><li>是现实世界到机器世界的一个中间层次。</li><li>是数据库设计的有力工具。</li><li><p>数据库设计人员和用户之间进行交流的语言。</p><p>概念模型的要求：</p></li><li><p>较强的语义表达能力。</p></li><li><p>简单、清晰、易于用户理解。</p><p>概念模型的表示：</p></li><li><p>实体-联系法，该方法使用E-R图来描述现实世界的概念模型，E-R方法也被称为E-R模型</p><p>信息世界的基本概念：</p></li><li><p>实体（Entity）：客观存在并可相互区别的事物称为实体。</p></li><li>属性（Attribute）：实体所具有的某一特性称为属性。一个实体可以由若干个属性来刻画。例如学生实体可以由学号、姓名、性别、出生年份、系、入学时间等属性组成。（94002268，张山，男，1976，计算机系，1994）这些属性组合起来表征了一个学生。</li><li>码（Key）：唯一标识实体的属性集称为码。例如学号是学生实体的码。</li><li>域（Domain）：属性的取值范围称为该属性的域。例如，学号的域为8位整数，姓名的域为字符串集合，年龄的域为小于38的整数，性别的域为（男，女）。</li><li>实体型（Entity Type） ：具有相同属性的实体必然具有共同的特征和性质。用<strong>实体名及其属性名</strong>集合来抽象和刻画同类实体，称为实体型。例如，学生（学号，姓名，性别，出生年份，系，入学时间）就是一个实体型。</li><li>实体集（Entity Set）：同型实体的集合称为实体集。例如，全体学生就是一个实体集。</li><li>联系（Relationship） ：在现实世界中，事物内部以及事物之间是有联系的，这些联系在信息世界中反映为实体（型）内部的联系和实体（型）之间的联系。实体内部的联系通常是指组成实体的各属性之间的联系。实体之间的联系通常是指不同实体集之间的联系。<ul><li>类型<ul><li>1:1</li><li>1:n</li><li>m:n</li></ul></li></ul></li></ul></li><li><p>逻辑模型和物理模型</p><blockquote><ul><li>逻辑模型主要包括层次模型、网状模型、关系模型、面向对象数据模型、对象关系数据模型、半结构化数据模型等。<strong>按计算机系统的观点</strong>对数据建模，用于DBMS实现。</li><li>物理模型是对数据最底层的抽象，描述数据在系统内部的表示方式和存取方法，在磁盘或磁带上的存储方式和存取方法。</li></ul></blockquote></li></ul><p>常见的数据模型：</p><ul><li>层次模型（Hierarchical Model）</li><li>网状模型（Network Model）</li><li>关系模型（Relational Model)）<ul><li>优点<ul><li>建立在严格的数学概念的基础上。</li><li>概念单一。</li><li>关系模型的存取路径对用户透明。</li></ul></li><li>缺点<ul><li>存取路径对用户透明，查询效率往往不如格式化数据模型。</li><li>为提高性能，必须对用户的查询请求进行优化，增加了开发数据库管理系统的难度。</li></ul></li></ul></li><li>面向对象数据模型（Object Oriented Data Model）</li><li>对象关系数据模型（Object Relational Data Model）</li><li>半结构化数据模型（Semistruture Data Model）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给Git添加代理</title>
      <link href="/2023/06/04/git%E4%BB%A3%E7%90%86/"/>
      <url>/2023/06/04/git%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git config --global 协议.proxy 协议://ip地址:端口号</span></span><br><span class="line">git config --global http.proxy http://127.0.0.1:7890</span><br><span class="line">git config --global https.proxy http://127.0.0.1:7890</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">取消代理</span></span><br><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">只对github.com</span></span><br><span class="line">git config --global http.https://github.com.proxy http://127.0.0.1:7890</span><br><span class="line">git config --global http.https://github.com.proxy socks5://127.0.0.1:7891</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">取消代理</span></span><br><span class="line">git config --global --unset http.https://github.com.proxy</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --get http.proxy</span><br><span class="line">git config --global --get https.proxy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给markdown文档添加参考文献引用</title>
      <link href="/2023/04/06/%E7%BB%99markdown%E6%96%87%E6%A1%A3%E6%B7%BB%E5%8A%A0%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E5%BC%95%E7%94%A8/"/>
      <url>/2023/04/06/%E7%BB%99markdown%E6%96%87%E6%A1%A3%E6%B7%BB%E5%8A%A0%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E5%BC%95%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">## Markdown 增加文献引用</span><br><span class="line"></span><br><span class="line">这边文章是介绍如何在 Markdown 中增加文献引用。[<span class="tag">&lt;<span class="name">sup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">sup</span>&gt;</span>](#refer-anchor-1)</span><br><span class="line"></span><br><span class="line">## 参考</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;refer-anchor-1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">- [1] [百度学术](http://xueshu.baidu.com/)</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;refer-anchor-2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">- [2] [Wikipedia](https://en.wikipedia.org/wiki/Main_Page)</span><br></pre></td></tr></table></figure><h2 id="Markdown-增加文献引用"><a href="#Markdown-增加文献引用" class="headerlink" title="Markdown 增加文献引用"></a>Markdown 增加文献引用</h2><p>这边文章是介绍如何在 Markdown 中增加文献引用。<a href="#refer-anchor-1"><sup>1</sup></a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><div id="refer-anchor-1"></div><ul><li>[1] <a href="http://xueshu.baidu.com/">百度学术</a></li></ul><div id="refer-anchor-2"></div><ul><li>[2] <a href="https://en.wikipedia.org/wiki/Main_Page">Wikipedia</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OS_PV操作</title>
      <link href="/2023/04/06/OS/OS_PV%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/04/06/OS/OS_PV%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是PV操作"><a href="#什么是PV操作" class="headerlink" title="什么是PV操作"></a>什么是PV操作</h1><p>PV操作就是荷兰语<strong>P</strong>asseren（通过），<strong>V</strong>rijgeven（释放）的简称。对应的就是wait等待，signal释放操作。</p><p>P操作就是，将进程从运行态转化为阻塞态，直到它被另一个进程唤醒</p><p>V操作就是，将一个处于阻塞态的进程唤醒。</p><h1 id="P操作"><a href="#P操作" class="headerlink" title="P操作"></a>P操作</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s=s<span class="number">-1</span></span><br><span class="line"><span class="keyword">if</span>(s&lt;<span class="number">0</span>)&#123;</span><br><span class="line">P();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="V操作"><a href="#V操作" class="headerlink" title="V操作"></a>V操作</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s=s+<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span>(s&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">V();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="抢占式优先级调度算法和非抢占式优先级调度算法"><a href="#抢占式优先级调度算法和非抢占式优先级调度算法" class="headerlink" title="抢占式优先级调度算法和非抢占式优先级调度算法"></a>抢占式优先级调度算法和非抢占式优先级调度算法</h1><p>抢占式优先级调度算法可以使当前正在执行的进程被更高优先级的进程所打断，并立即切换到新的进程。这种调度算法通常会导致频繁的上下文切换，但是可以保证高优先级进程的响应时间，从而提高系统的实时性能。</p><p>而非抢占式优先级调度算法则不允许其他进程打断当前进程的执行，只有在当前进程自愿放弃CPU控制权时才会进行进程切换。这种调度算法相对稳定，但是可能会导致低优先级进程长时间等待，影响系统的响应速度和实时性能。</p><p>即抢占式优先级调度算法进行V操作时，唤醒的进程为优先级最高的进程，而非抢占式优先级调度算法的V操作则无作为，继续执行当前进程，完成后再执行其他进程。</p>]]></content>
      
      
      <categories>
          
          <category> OS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> PV操作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode_3_无重复字符的最长子串</title>
      <link href="/2023/03/28/leetcode_3_%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/"/>
      <url>/2023/03/28/leetcode_3_%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定一个字符串 $s$ ，请你找出其中不含有重复字符的  <strong>最长子串</strong>  的长度。</p><p> <strong>示例 1:</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: s = &quot;abcabcbb&quot;</span><br><span class="line">输出: 3 </span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。</span><br></pre></td></tr></table></figure><p> <strong>示例 2:</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: s = &quot;bbbbb&quot;</span><br><span class="line">输出: 1</span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;b&quot;，所以其长度为 1。</span><br></pre></td></tr></table></figure><p> <strong>示例 3:</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: s = &quot;pwwkew&quot;</span><br><span class="line">输出: 3</span><br><span class="line">解释: 因为无重复字符的最长子串是 &quot;wke&quot;，所以其长度为 3。</span><br><span class="line">     请注意，你的答案必须是 子串 的长度，&quot;pwke&quot; 是一个子序列，不是子串。</span><br></pre></td></tr></table></figure><p> <strong>提示：</strong> </p><ul><li>$0 &lt;= s.length &lt;= 5 * 10^{4}$</li><li>$s$ 由英文字母、数字、符号和空格组成</li></ul><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>朴素的思想就是设置双重循环，外循环<code>i</code>根据字符串长度确定循环次数，内循环指针<code>j</code>指向，外循环当前的指针<code>i</code>，从<code>j</code>向后遍历一个字符，根据map的特性来得到本轮的最大无重复字串的长度，存储到<code>temp</code>，每轮内循环结束，就比较和<code>max</code>的大小，更新<code>max</code>.</p><h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart TDA[初始化map,temp&#x3D;0,max&#x3D;0]--&gt;B[设置双循环,遍历字符串]--&gt;E[外循环 i 从头遍历字符串]--&gt;C[内循环指针j指向外循环变量i,并向后遍历]--&gt;D{当前指针所指\n字符是否已在\nmap的key中?}--是--&gt;F[比较temp与max更新max,打破内循环]--&gt;ED--否--&gt;G[temp++,\n当前字符加入map]--&gt;H{当前字符是\n否到达最后一位?}--是--&gt;I[比较temp和max\n更新max]I--&gt;S{j指到到字符串末尾?}--是--&gt;ES--否--&gt;C  </pre></div><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">lengthOfLongestSubstring</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="type">int</span> max=<span class="number">0</span>; <span class="comment">//存储最大无重复子串长度</span></span><br><span class="line">        <span class="type">int</span> temp=<span class="number">0</span>;</span><br><span class="line">        Map&lt;Character,Integer&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)&#123;</span><br><span class="line">            temp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;s.length();j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(map.containsKey(s.charAt(j)))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(temp&gt;max)&#123;</span><br><span class="line">                        max=temp;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    map.put(s.charAt(j), <span class="number">1</span>);</span><br><span class="line">                    temp++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(s.length()-<span class="number">1</span>==j)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(temp&gt;max)&#123;</span><br><span class="line">                        max=temp;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            map.clear();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="进一步分析"><a href="#进一步分析" class="headerlink" title="进一步分析"></a>进一步分析</h1><p>其实这是一道滑动窗口问题</p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>滑动窗口是一种基于双指针的一种思想，两个指针指向的元素之间形成一个窗口。</p><p>分类：窗口有两类，一种是固定大小类的窗口，一类是大小动态变化的窗口。</p><h2 id="应用："><a href="#应用：" class="headerlink" title="应用："></a>应用：</h2><ul><li>利用滑动窗口获取平滑的数据，如一段连续时间的数据平均值，能够有更好的稳定性，如温度监测。</li></ul><p>什么情况可以用滑动窗口来解决实际问题呢？</p><ul><li>一般给出的数据结构是数组或者字符串</li><li>求取某个子串或者子序列最长最短等最值问题或者求某个目标值时</li><li>该问题本身可以通过暴力求解</li></ul>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 滑动窗口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mermaid 语法</title>
      <link href="/2023/03/22/mermaid/"/>
      <url>/2023/03/22/mermaid/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Mermaid是一种基于Javascript的绘图工具，使用类似于Markdown的语法，使用户可以方便快捷地通过代码创建图表。</p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><p>所有流程图均由<strong>节点</strong>、几何形状和<strong>边</strong>、箭头或线组成</p><h3 id="定义流程图的方向"><a href="#定义流程图的方向" class="headerlink" title="定义流程图的方向"></a>定义流程图的方向</h3><ul><li><p>LR——从左到右</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    Start --&gt; Stop</span><br></pre></td></tr></table></figure>  <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart LR    Start --&gt; Stop  </pre></div></li><li><p>TB——从上到下</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flowchart TB</span><br><span class="line">    Start --&gt; Stop</span><br></pre></td></tr></table></figure>  <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart TB    Start --&gt; Stop  </pre></div></li></ul><ul><li>TD - 自上而下/与TB相同  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">    Start --&gt; Stop</span><br></pre></td></tr></table></figure>  <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart TD    Start --&gt; Stop  </pre></div></li></ul><h3 id="节点形状"><a href="#节点形状" class="headerlink" title="节点形状"></a>节点形状</h3><ul><li><p>圆角矩形节点</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    id1(This is the text in the box)</span><br></pre></td></tr></table></figure> <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart LR id1(This is the text in the box)  </pre></div></li><li><p><strong>体育场形节点</strong></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    id1([This is the text in the box])</span><br></pre></td></tr></table></figure>  <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart LR id1([This is the text in the box])  </pre></div></li><li><p><strong>子程序形状的节点</strong></p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    id1[[This is the text in the box]]</span><br></pre></td></tr></table></figure> <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart LR id1[[This is the text in the box]]  </pre></div></li><li><p>圆柱形节点</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    id1[(Database)]</span><br></pre></td></tr></table></figure> <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart LR id1[(Database)]  </pre></div></li><li><p><strong>圆圈形式的节点</strong></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    id1((This is the text in the circle))</span><br></pre></td></tr></table></figure>  <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart LR id1((This is the text in the circle))  </pre></div></li><li><p><strong>不对称形状的节点</strong></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    id1&gt;This is the text in the box]</span><br></pre></td></tr></table></figure>  <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart LR id1&gt;This is the text in the box]  </pre></div></li><li><p><strong>菱形</strong></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">    id1&#123;This is the text in the box&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>  <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart LR id1{This is the text in the box}  </pre></div></li></ul><ul><li><p><strong>平行四边形</strong></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">    id1[\This is the text in the box\]</span><br></pre></td></tr></table></figure>  <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart TD id1[\This is the text in the box\]  </pre></div></li><li><p><strong>平行四边形 （反向）</strong></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">    id1[/This is the text in the box/]</span><br></pre></td></tr></table></figure>  <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart TD id1[&#x2F;This is the text in the box&#x2F;]  </pre></div></li><li><p><strong>梯形</strong></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">    A[/Christmas\]</span><br></pre></td></tr></table></figure>  <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart TD A[&#x2F;Christmas\]  </pre></div></li><li><p><strong>梯形（反向）</strong></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">    B[\Go shopping/]</span><br></pre></td></tr></table></figure>  <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart TD B[\Go shopping&#x2F;]  </pre></div>    </li></ul><h3 id="节点之间的链接"><a href="#节点之间的链接" class="headerlink" title="节点之间的链接"></a>节点之间的链接</h3><ul><li><p>基本</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">flowchart LR</span><br><span class="line">    A--&gt;B</span><br><span class="line">    C---&gt;D</span><br><span class="line">    E --- F</span><br><span class="line">    G-- This is the text! ---H</span><br><span class="line">    I---|This is the text|J</span><br><span class="line">    K-- text --&gt;L</span><br><span class="line">    M-.-&gt;N;</span><br><span class="line">    O-. text .-&gt; P</span><br><span class="line">    Q ==&gt; R</span><br><span class="line">    S == text ==&gt; T</span><br><span class="line"></span><br></pre></td></tr></table></figure>   <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart LR    A--&gt;B    C---&gt;D    E --- F    G-- This is the text! ---H    I---|This is the text|J    K-- text --&gt;L    M-.-&gt;N;    O-. text .-&gt; P    Q &#x3D;&#x3D;&gt; R    S &#x3D;&#x3D; text &#x3D;&#x3D;&gt; T  </pre></div></li></ul><p>​        </p><ul><li><p>其他用法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">   A -- text --&gt; B -- text2 --&gt; C</span><br><span class="line">   a --&gt; b &amp; c--&gt; d</span><br><span class="line">   E &amp; F--&gt; G &amp; H</span><br><span class="line">   I --o J</span><br><span class="line">   K --x L</span><br></pre></td></tr></table></figure>  <div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart LR   A -- text --&gt; B -- text2 --&gt; C   a --&gt; b &amp; c--&gt; d   E &amp; F--&gt; G &amp; H   I --o J   K --x L  </pre></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">    A[Start] --&gt; B&#123;Is it?&#125;</span><br><span class="line">    B --&gt;|Yes| C[OK]</span><br><span class="line">    C --&gt; D[Rethink]</span><br><span class="line">    D --&gt; B</span><br><span class="line">    B ----&gt;|No| E[End]</span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart TD    A[Start] --&gt; B{Is it?}    B --&gt;|Yes| C[OK]    C --&gt; D[Rethink]    D --&gt; B    B ----&gt;|No| E[End]  </pre></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> 小工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>leetcode_2_两数相加</title>
      <link href="/2023/03/18/leetcode_2_%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/"/>
      <url>/2023/03/18/leetcode_2_%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给你两个  <strong>非空</strong>  的链表，表示两个非负的整数。它们每位数字都是按照  <strong>逆序</strong>  的方式存储的，并且每个节点只能存储  <strong>一位</strong>  数字。</p><p>请你将两个数相加，并以相同形式返回一个表示和的链表。</p><p>你可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p><p> <strong>示例 1：</strong> </p><p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2021/01/02/addtwonumber1.jpg" alt=""><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [2,4,3], l2 = [5,6,4]</span><br><span class="line">输出：[7,0,8]</span><br><span class="line">解释：342 + 465 = 807.</span><br></pre></td></tr></table></figure></p><p> <strong>示例 2：</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [0], l2 = [0]</span><br><span class="line">输出：[0]</span><br></pre></td></tr></table></figure><p> <strong>示例 3：</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]</span><br><span class="line">输出：[8,9,9,9,0,0,0,1]</span><br></pre></td></tr></table></figure><p> <strong>提示：</strong> </p><ul><li>每个链表中的节点数在范围 $[1, 100]$ 内</li><li>$0 &lt;= Node.val &lt;= 9$</li><li>题目数据保证列表表示的数字不含前导零</li></ul><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><p>题目给出两个链表，由头节点顺序遍历得到的序列是一个数的逆序列，求两个链表所表示的两数之和。</p><p>我们可以新建一个结果链表<code>res</code>,并设置一个工作指针<code>last</code>。初始化，指向<code>res</code>头节点。设置<code>carry</code>记录当前进位数,初始化为0.</p><p>循环。遍历<code>l1</code> ,<code>l2</code>两个链表</p><p>分为以下种种情况</p><ul><li><p><code>l1!=null&amp;&amp;l2!=null</code></p><p>  此时<code>l1.val</code>和<code>l2.val</code>和<code>carry</code>相加，<code>(l1.val+l2.val+carry)%10</code>是当前位的数,<code>(l1.val+l2.val+carry)/10</code>是当前进位的数。两者顺序不能变。</p><p>  <code>l1</code>,<code>l2</code>,<code>last</code>,后移</p></li><li><p><code>l1!=null&amp;&amp;l2==null</code></p><p>  <code>(l1.val+carry)%10</code>是当前位的数,<code>(l1.val+carry)/10</code>是当前进位的数</p><p>  <code>l1</code>,<code>last</code>,后移</p></li><li><p><code>l1==null&amp;&amp;l2!=null</code></p><p>  <code>(l2.val+carry)%10</code>是当前位的数,<code>(l2.val+carry)/10</code>是当前进位的数</p><p>  <code>l2</code>,<code>last</code>,后移</p></li><li><p><code>l1==null&amp;&amp;l2==null</code></p><p>  这步是收尾工作，判断当前位carry是否为0，是则last.next==null,否则last.next.val=carry<br>  这里仅需判断carry而无需判断高位的情况，因为不存在高位为0的情况</p></li></ul><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @lc app=leetcode.cn id=2 lang=java</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * [2] 两数相加</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// @lc code=start</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> &#123;</span><br><span class="line">        ListNode res=<span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> carry=<span class="number">0</span>;</span><br><span class="line">        ListNode last=res;</span><br><span class="line">        <span class="keyword">while</span>(l1!=<span class="literal">null</span>||l2!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(l1!=<span class="literal">null</span>&amp;&amp;l2!=<span class="literal">null</span>)&#123;</span><br><span class="line">                last.next=<span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">                last.next.val=(l1.val+l2.val+carry)%<span class="number">10</span>;</span><br><span class="line">                carry=(l1.val+l2.val+carry)/<span class="number">10</span>;</span><br><span class="line">                l1=l1.next;</span><br><span class="line">                l2=l2.next;</span><br><span class="line">                last=last.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(l2==<span class="literal">null</span>)&#123;</span><br><span class="line">                last.next=<span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">                last.next.val=(l1.val+carry)%<span class="number">10</span>;</span><br><span class="line">                carry=(l1.val+carry)/<span class="number">10</span>;</span><br><span class="line">                l1=l1.next;</span><br><span class="line">                last=last.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(l1==<span class="literal">null</span>)&#123;</span><br><span class="line">                last.next=<span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">                last.next.val=(l2.val+carry)%<span class="number">10</span>;</span><br><span class="line">                carry=(l2.val+carry)/<span class="number">10</span>;</span><br><span class="line">                l2=l2.next;</span><br><span class="line">                last=last.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(l1==<span class="literal">null</span>&amp;&amp;l2==<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(carry==<span class="number">0</span>)&#123;</span><br><span class="line">                    last.next=<span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(carry!=<span class="number">0</span>)&#123;</span><br><span class="line">                    last.next=<span class="keyword">new</span> <span class="title class_">ListNode</span>(carry);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res.next;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// @lc code=end</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode_1_两数之和</title>
      <link href="/2023/03/18/leetcode_1_%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
      <url>/2023/03/18/leetcode_1_%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定一个整数数组 $nums$ 和一个整数目标值 $target$，请你在该数组中找出  <strong>和为目标值</strong>  <em>$target$</em>  的那  <strong>两个</strong>  整数，并返回它们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p><p>你可以按任意顺序返回答案。</p><p> <strong>示例 1：</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [2,7,11,15], target = 9</span><br><span class="line">输出：[0,1]</span><br><span class="line">解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。</span><br></pre></td></tr></table></figure><p> <strong>示例 2：</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,2,4], target = 6</span><br><span class="line">输出：[1,2]</span><br></pre></td></tr></table></figure><p> <strong>示例 3：</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,3], target = 6</span><br><span class="line">输出：[0,1]</span><br></pre></td></tr></table></figure><p> <strong>提示：</strong> </p><ul><li>$2 &lt;= nums.length &lt;= 10^{4}$</li><li>$-10^{9} &lt;= nums[i] &lt;= 10^{9}$</li><li>$-10^{9} &lt;= target &lt;= 10^{9}$</li><li><p><strong>只会存在一个有效答案</strong> </p><p><strong>进阶：</strong> 你可以想出一个时间复杂度小于 $O(n^{2})$ 的算法吗？</p></li></ul><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><p> 定义两个指针<code>i</code>,<code>j</code>,<br> 遍历数组求和，当其<code>nums[i]+num[j]=target</code>时，记录两个下标的值<code>[i,j]</code>，最后返回这个数组。</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;nums.length;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[i]+nums[j]==target)&#123;</span><br><span class="line">                    a[<span class="number">0</span>]=i;a[<span class="number">1</span>]=j;</span><br><span class="line">                    <span class="keyword">return</span> a;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性规划</title>
      <link href="/2022/07/21/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/"/>
      <url>/2022/07/21/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h1 id="线性规划"><a href="#线性规划" class="headerlink" title="线性规划"></a>线性规划</h1><p>我想计算一个线性方程组方程组的解</p><script type="math/tex; mode=display">\begin{equation}% \begin{equation*} 加'*'去掉公式编号\left\{\begin{aligned}     %请使用'aligned'或'align*'10x-2y-2z &= 72 \\     %加'&'指定对齐位置-x+10y-2z &= 83 \\-x-y+5z &= 42 \\\end{aligned}\right.\end{equation}% \end{equation*}   加'*'去掉公式编号% 注意：在 markdown 环境下，某些特殊字符，如'\', '*'等，会首先被 markdown 语法转义，然后再被 Latex 转义。% 因此有时候 '\{'需要写作'\\{'，'*'需要写作'\*'，'\\'需要写作'\\\\'等，视不同的解释环境而定</script><p>用python算应该怎么办呢？</p><p>发现有一个叫<code>numpy</code>的库</p><p>它有啥我们先不管,我们先关注于问题本身</p><p>它是一个$AX=b$形式的向量,我可以把它们写成向量的形式啊</p><p>长这样：</p><script type="math/tex; mode=display">\left[\begin{matrix}10 & -2 & -2 \\-1 & 10 & -2 \\-1 & -1 & 5 \\\end{matrix}\right] \left[\begin{matrix}x\\ y\\ z\end{matrix}\right]=\left[\begin{matrix}72\\83\\42\\\end{matrix}\right]</script><p>我需要矩阵乘法和矩阵求逆的方法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">A = np.array([[<span class="number">10</span>, -<span class="number">2</span>, -<span class="number">2</span>],[-<span class="number">1</span>, <span class="number">10</span>, -<span class="number">2</span>],[<span class="number">1</span>, -<span class="number">1</span>, <span class="number">5</span>]])</span><br><span class="line">b = np.array([<span class="number">72</span>, <span class="number">83</span>, <span class="number">42</span>])</span><br><span class="line">X = np.linalg.inv(A).dot(b)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(X)</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>我还发现可以用一个方法来解方程<script type="math/tex">AX=b</script></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X = np.linalg.solve(A,b)</span><br></pre></td></tr></table></figure><p>它是求解满秩的方程组的函数<br>第一个是系数矩阵，第二个是常数矩阵</p><p>我又了解到一个叫<code>sympy</code>的库,它的计算精度似乎更高<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> symbols, Eq, solve</span><br><span class="line"></span><br><span class="line">x,y,z = symbols(<span class="string">&quot;x y z&quot;</span>)  <span class="comment"># 符号化变量</span></span><br><span class="line">equ =[Eq(<span class="number">10</span>*x-<span class="number">2</span>*y-<span class="number">2</span>*z, <span class="number">72</span>),  <span class="comment"># 等式函数</span></span><br><span class="line">    Eq(-x+<span class="number">10</span>*y-<span class="number">2</span>*z, <span class="number">83</span>),</span><br><span class="line">    Eq(-x-y+<span class="number">5</span>*z, <span class="number">72</span>)]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(solve(equ, [x,y,z]))  <span class="comment">#</span></span><br><span class="line">第一个参数为要解的方程，要求右端等于<span class="number">0</span>，第二个参数为要解的未知数</span><br></pre></td></tr></table></figure><br>可是遇到很多不同类型约束条件应该怎么办呢</p><h2 id="线性规划的标准形式"><a href="#线性规划的标准形式" class="headerlink" title="线性规划的标准形式"></a>线性规划的标准形式</h2><p>$min \quad c^Tx$</p><script type="math/tex; mode=display">\begin{equation}\left\{    \begin{aligned}     Ax &\leq b \\    Aeq·x&=Beq \\    Ib \leq &x \leq ub    \end{aligned} \right.\end{equation}</script><p>比如下面这个 </p><p>$max\quad z=2x_1+3x_2-5x_3$</p><script type="math/tex; mode=display">\begin{equation}\left\{    \begin{aligned}     x_1+x_2+x_3&=7 \\    2x_1-5x_2+x_3&\geq10 \\    x_1+3x_2+x_3&\leq12 \\    x_1,x_2,x_3&\geq 3    \end{aligned} \right.\end{equation}</script><p><strong>求一个变量的最大值我们只要求出这个变量的相反数的最小值就好了</strong></p><p>根据规范式转换为</p><p>$min\quad -z=-2x_1-3x_2+5x_3$</p><script type="math/tex; mode=display">\begin{equation}\left\{    \begin{aligned}     x_1+x_2+x_3&=7 \\    -2x_1+5x_2-x_3&\leq-10 \\    x_1+3x_2+x_3&\leq12 \\    -x_1,-x_2,-x_3&\leq-3    \end{aligned} \right.\end{equation}</script><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pickletools <span class="keyword">import</span> optimize</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> linprog</span><br><span class="line"></span><br><span class="line">c = np.array([-<span class="number">2</span>,-<span class="number">3</span>,<span class="number">5</span>])</span><br><span class="line">Aeq = np.array([[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>]])</span><br><span class="line">beq = np.array([<span class="number">7</span>])</span><br><span class="line">A = np.array([[-<span class="number">2</span>,<span class="number">5</span>,-<span class="number">1</span>],[<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>]])</span><br><span class="line">b = np.array([-<span class="number">10</span>,<span class="number">12</span>])</span><br><span class="line">x1,x2,x3 = (<span class="number">0</span>,<span class="literal">None</span>),(<span class="number">0</span>,<span class="literal">None</span>),(<span class="number">0</span>,<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">res = linprog(c,A,b,Aeq,beq,bounds=[x1,x2,x3])</span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><p>关于<code>scipy.optimize.linprog</code><br><a href="https://blog.csdn.net/weixin_45288557/article/details/109139303">详细信息</a></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo x Github的常用指令</title>
      <link href="/2022/07/20/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
      <url>/2022/07/20/%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-x-Github常用指令"><a href="#Hexo-x-Github常用指令" class="headerlink" title="Hexo x Github常用指令"></a>Hexo x Github常用指令</h1><h2 id="hexo-s"><a href="#hexo-s" class="headerlink" title="hexo s"></a>hexo s</h2><p>在blog目录下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>预览博客，返回一网页地址</p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p><a href="https://hexo.io/themes/">主题</a></p><p>如你所见，其实每个主题都会包含这个三个东西</p><ul><li>预览效果</li><li>项目地址</li><li>配置文档</li></ul><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li><p>打开主题项目地址，然后点击<code>CODE</code>，然后点击<code>Download ZIP</code></p><p>  这样可以下载主题文件压缩包</p></li><li><p>解压压缩包，把文件夹放在<code>blog</code>目录下的<code>themes</code>目录，并把文件夹命名为主题的名字</p></li><li><p>在站点<code>_config.yml</code>找到<code>themes</code>这一行，然后将主题名字修改为<code>你的主题的名字</code></p></li><li><p>注意：有些主题你更换之后是暂时无法预览的，因为有的主题还需要安装它需要的依赖，这一般都会在主题的文档里面提到，只有安装它的依赖之后才可以正常预览</p></li></ul><p>​    </p><h2 id="上传到github命令"><a href="#上传到github命令" class="headerlink" title="上传到github命令"></a>上传到github命令</h2><p><code>hexo g -d</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 语法</title>
      <link href="/2022/07/20/Markdown%20%E7%9A%84%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/07/20/Markdown%20%E7%9A%84%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown-基本语法一"><a href="#Markdown-基本语法一" class="headerlink" title="Markdown 基本语法一"></a>Markdown 基本语法一</h1><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">...</span><br><span class="line">###.. n级标题</span><br></pre></td></tr></table></figure><p>应该是<code># 标题</code>而不是<code>#标题</code>,在非标准文本编辑器中会报错.</p><h2 id="2-强调"><a href="#2-强调" class="headerlink" title="2.强调"></a>2.强调</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**Hello world**</span><br><span class="line">__ABCD__</span><br></pre></td></tr></table></figure><p><strong>Hello world</strong></p><p><strong>ABCD</strong></p><p>快捷方式: 选中目标 <code>ctrl+B</code></p><h2 id="3-斜体"><a href="#3-斜体" class="headerlink" title="3.斜体"></a>3.斜体</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*斜体*</span><br></pre></td></tr></table></figure><p><em>斜体</em></p><p><strong>若斜体且斜体可</strong>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">***鞋儿粗***</span><br><span class="line">___写而卒___</span><br></pre></td></tr></table></figure><p><strong><em>鞋儿粗</em></strong><br><strong><em>写而卒</em></strong></p><h2 id="4-删除"><a href="#4-删除" class="headerlink" title="4.删除"></a>4.删除</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~正确的话会被划掉~~</span><br></pre></td></tr></table></figure><p><del>正确的话会被划掉</del></p><h2 id="5-代码"><a href="#5-代码" class="headerlink" title="5.代码"></a>5.代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">```加enter是代码块,`文字`仅有文字代码</span><br></pre></td></tr></table></figure><h2 id="6-引用"><a href="#6-引用" class="headerlink" title="6.引用"></a>6.引用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 他说</span><br><span class="line">&gt;&gt; 她说 </span><br></pre></td></tr></table></figure><blockquote><p>他说</p><blockquote><p>她说</p></blockquote></blockquote><p>引用是可以<strong>嵌套</strong>的</p><h2 id="7-列表"><a href="#7-列表" class="headerlink" title="7.列表"></a>7.列表</h2><h3 id="7-1无序"><a href="#7-1无序" class="headerlink" title="7.1无序"></a>7.1无序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+ a</span><br><span class="line">- b</span><br><span class="line">* c</span><br></pre></td></tr></table></figure><ul><li>a</li></ul><ul><li>b</li><li>c</li></ul><p><strong>回车</strong>可以延续</p><p><strong>tab</strong>构建上一级的<strong>子级</strong>列表</p><h3 id="7-2有序"><a href="#7-2有序" class="headerlink" title="7.2有序"></a>7.2有序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2. </span><br></pre></td></tr></table></figure><ol><li></li><li><ol><li>a</li><li>b</li></ol></li></ol><p>回车**可以延续</p><p><strong>tab</strong>构建上一级的<strong>子级</strong>列表</p><h2 id="8-角标"><a href="#8-角标" class="headerlink" title="8.角标"></a>8.角标</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ F = 10^3 N$</span><br></pre></td></tr></table></figure><p>$F = 10^3 N$</p><h2 id="9-高亮"><a href="#9-高亮" class="headerlink" title="9.高亮"></a>9.高亮</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">==啊==</span><br></pre></td></tr></table></figure><p>==啊==</p><h2 id="10-注释"><a href="#10-注释" class="headerlink" title="10.注释"></a>10.注释</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注释[^num]</span><br></pre></td></tr></table></figure><p>注释<sup><a href="#fn_1" id="reffn_1">1</a></sup></p><p><strong>脚注</strong>：(一般放在最后)</p><h2 id="11-链接"><a href="#11-链接" class="headerlink" title="11. 链接"></a>11. 链接</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[链接](https://www.baidu.com)</span><br><span class="line">[10:](# 10注释)</span><br></pre></td></tr></table></figure><p><a href="https://www.baidu.com">链接</a></p><p><a href="# 10注释">10:</a></p><h2 id="12-todo列表"><a href="#12-todo列表" class="headerlink" title="12. todo列表"></a>12. todo列表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- [ ] 一件事</span><br><span class="line">- [ ] 两件事</span><br><span class="line">- [x] 三件事</span><br></pre></td></tr></table></figure><ul><li><p>[x] 一件事</p></li><li><p>[ ] 两件事</p></li><li><p>[x] 三件事</p></li></ul><h2 id="13-表格"><a href="#13-表格" class="headerlink" title="13. 表格"></a>13. 表格</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|奇数|偶数|</span><br><span class="line">| :-- | :--: |</span><br><span class="line">|1|2</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">奇数</th><th style="text-align:center">偶数</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:center">2</td></tr></tbody></table></div><h2 id="14-图片"><a href="#14-图片" class="headerlink" title="14.  图片"></a>14.  图片</h2><p><strong>直接复制粘贴或拖动</strong></p><p><img src="https://img2.baidu.com/it/u=2839134121,3147950360&amp;fm=253&amp;fmt=auto?w=500&amp;h=195" alt="img"></p><p>配置typora+picgo+阿里云oss后，通过图床：</p><p><img src="https://blog-faithererer.oss-cn-qingdao.aliyuncs.com/blog/typoraImg202207221758534.jpg" alt="c5ad1e1202850c193aed802258e80113df477cf7_raw"></p><h2 id="15-分割线"><a href="#15-分割线" class="headerlink" title="15.分割线"></a>15.分割线</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***或---以上</span><br></pre></td></tr></table></figure><hr><h2 id="16-emoji表情"><a href="#16-emoji表情" class="headerlink" title="16.emoji表情"></a>16.emoji表情</h2><p>最好直接复制粘贴😊</p><p><a href="https://emojipedia.org">emoji表情网站</a></p><hr><h1 id="Markdown的基本语法二"><a href="#Markdown的基本语法二" class="headerlink" title="Markdown的基本语法二"></a>Markdown的基本语法二</h1><h2 id="1-生成目录"><a href="#1-生成目录" class="headerlink" title="1.生成目录"></a>1.生成目录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[TOC](typora特有)</span><br></pre></td></tr></table></figure><h2 id="2-内嵌-LaTeX-公式"><a href="#2-内嵌-LaTeX-公式" class="headerlink" title="2.内嵌$\LaTeX$公式"></a>2.内嵌$\LaTeX$公式</h2><p><a href="https://blog.csdn.net/weixin_42468475/article/details/106015495">latex大全](latex大全</a>)</p><h2 id="3-Typora-的常用快捷键"><a href="#3-Typora-的常用快捷键" class="headerlink" title="3. Typora 的常用快捷键"></a>3. Typora 的常用快捷键</h2><div class="table-container"><table><thead><tr><th style="text-align:center">按键</th><th style="text-align:center">效果</th><th style="text-align:center">按键</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center"><code>Ctrl</code> + <code>D</code></td><td style="text-align:center">选中当前词</td><td style="text-align:center"><code>Ctrl</code> + <code>L</code></td><td style="text-align:center">选中当前句/行</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>E</code></td><td style="text-align:center">选中当前区块</td><td style="text-align:center"><code>Ctrl</code> + <code>F</code></td><td style="text-align:center">搜索当前选中</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>B</code></td><td style="text-align:center">加粗当前选中</td><td style="text-align:center"><code>Ctrl</code> + <code>H</code></td><td style="text-align:center">替换当前选中</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>I</code></td><td style="text-align:center">倾斜当前选中</td><td style="text-align:center"><code>Ctrl</code> + <code>U</code></td><td style="text-align:center">下划当前选中</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>K</code></td><td style="text-align:center">将当前选中生成链接</td><td style="text-align:center"><code>Ctrl</code> + <code>J</code></td><td style="text-align:center">滚动屏幕将选中滚至顶部</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>W</code></td><td style="text-align:center">关闭当前窗口</td><td style="text-align:center"><code>Ctrl</code> + <code>N</code></td><td style="text-align:center">打开新窗口</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>O</code></td><td style="text-align:center">打开文件</td><td style="text-align:center"><code>Ctrl</code> + <code>P</code></td><td style="text-align:center">搜索文件并打开</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>回车</code></td><td style="text-align:center">表格下方插入行</td><td style="text-align:center"><code>Ctrl</code> + <code>,</code></td><td style="text-align:center">打开偏好设置</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>.</code></td><td style="text-align:center">切换全角/半角标点</td><td style="text-align:center"><code>Ctrl</code> + <code>/</code></td><td style="text-align:center">切换正常/源代码视图</td></tr><tr><td style="text-align:center"><code>Ctrl</code> + <code>Shift</code> + <code>-</code></td><td style="text-align:center">缩小视图缩放</td><td style="text-align:center"><code>Ctrl</code> + <code>Shift</code> + <code>+</code></td><td style="text-align:center">放大视图缩放</td></tr></tbody></table></div><p>还有一些不常用的/三键的快捷键不在此列出.</p><h2 id="4-Typora-的主题样式与检查元素"><a href="#4-Typora-的主题样式与检查元素" class="headerlink" title="4. *Typora 的主题样式与检查元素"></a>4. *Typora 的主题样式与检查元素</h2><p>Markdown 在编译后约等于 HTML. 而 Typora 的正常视图就是编译后的 Markdown, 故Typora的主题样式本质就是 CSS 文件.</p><p>可以下载各种好看的主题给 Typora换上, 同时也可以自己调整对应的 CSS 文件, 或者自己手搓. </p><p>在 Typora 设置中开启 <code>调试模式</code> 后即可在正常视图右击打开 <code>检查元素</code>, 在其中就可以完全将 Markdown 文件当成 HTML 来编辑.</p><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p><a href="[Markdown基本语法 | Markdown 中文网 (p2hp.com">官网</a>](<a href="http://markdown.p2hp.com/basic-syntax/#code">http://markdown.p2hp.com/basic-syntax/#code</a>))</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>my-first-blog</title>
      <link href="/2022/07/20/my-first-blog/"/>
      <url>/2022/07/20/my-first-blog/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/07/20/hello-world/"/>
      <url>/2022/07/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
